{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","removal","name","number","onClick","Filter","filter","change","id","type","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","showFiltered","setShowFiltered","setMessage","useEffect","personService","initialPersons","notificationType","setTimeout","event","target","preventDefault","personObject","length","personExists","find","undefined","window","confirm","updatedPerson","updated","map","catch","error","returnedPersons","concat","console","log","toString","toLowerCase","includes","removed","joku","remainder","handleRemove","ReactDOM","render","document","getElementById"],"mappings":"gMAUeA,EARA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxB,OACE,+BAAKD,EAAOE,KAAZ,IAAmBF,EAAOG,OAC1B,wBAAQC,QAASH,EAAjB,wBCSWI,EAZA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACtB,OACI,qDAEI,uBAAOC,GAAIF,EACJG,KAAK,OACLC,MAAOJ,EACPK,SAAUJ,QCYdK,EAlBI,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACnE,OACE,8BACA,uBAAMC,SAAUL,EAAhB,UACE,yCACQ,uBAAOH,MAAOI,EAASH,SAAUI,OAEzC,2CACU,uBAAOL,MAAOM,EAAWL,SAAUM,OAE7C,8BACE,wBAAQR,KAAK,SAAb,yB,gBCbJU,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAChB,EAAIiB,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBX,GAAMiB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAAAhB,GAEX,OADgBY,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BX,IAC5Bc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCN5BK,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAWD,EAAQrB,KAAxB,SACGqB,EAAQA,WCsHFE,EAxHH,WACV,MAA+BC,mBAAS,IAAxC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQnB,EAAR,KAAiBsB,EAAjB,KACA,EAAkCH,qBAAlC,mBAAOjB,EAAP,KAAkBqB,EAAlB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,mBAAS,IAAzC,mBAAQH,EAAR,KAAiBU,EAAjB,KAEAC,qBAAU,WACNC,IAEGpB,MAAK,SAAAqB,GACJR,EAAWQ,QAEhB,IAEH,IAAMC,EAAmB,SAACd,GAAgC,IAAvBrB,EAAsB,uDAAjB,aACtC+B,EAAW,CAACV,UAASrB,SACrBoC,YAAW,WACTL,EAAW,QACV,MA6EL,OACE,gCACE,2CACA,cAAC,EAAD,CAAcV,QAASA,IACvB,cAAC,EAAD,CAAQxB,OAAQgC,EAAc/B,OAAQ,SAAAuC,GAAK,OAAIP,EAAgBO,EAAMC,OAAOrC,UAE5E,2CAEA,cAAC,EAAD,CAAYG,UAlFE,SAACiC,GACjBA,EAAME,iBAER,IAAMC,EAAe,CACnB/C,KAAMY,EACNN,GAAI0B,EAAQgB,OAAQ,EACpB/C,OAAQa,GAGJmC,EAAejB,EAAQkB,MAAK,SAAApD,GAAM,OAAIA,EAAOE,OAAS+C,EAAa/C,QACzE,QAAoBmD,IAAjBF,EAA2B,CAE5B,GADkBG,OAAOC,QAAP,UAAkBzC,EAAlB,2EACJ,CACZ,IAAM0C,EAAa,2BAAOL,GAAP,IAAqBhD,OAAQ8C,EAAa9C,SAgB3D,OAfFuC,EACUS,EAAa3C,GAAIgD,GACxBlC,MAAM,SAAAmC,GACLb,EAAiB,yBAAD,OAA0BY,EAActD,KAAxC,kBAChBiC,EAAWD,EAAQwB,KAAI,SAAA1D,GAAM,OAAIA,EAAOG,SAAWgD,EAAahD,OAASH,EAASyD,MAClFrB,EAAW,IACXC,EAAa,OAGdsB,OAAM,SAAAC,GACLhB,EAAiB,GAAD,OAAIY,EAActD,KAAlB,6CAAmE,YAGrFkC,EAAW,SACXC,EAAa,IAKjB,OAFAD,EAAW,SACXC,EAAa,IAIfK,EACUO,GACP3B,MAAK,SAAAuC,GACJjB,EAAiB,SAAD,OAAUiB,EAAgB3D,OAC1C2C,YAAW,WACTL,EAAW,QACV,KACHL,EAAWD,EAAQ4B,OAAOD,IAC1BzB,EAAW,IACXC,EAAa,QAsCDvB,QAASA,EACTC,iBAlCS,SAAC+B,GACxBiB,QAAQC,IAAIlB,EAAMC,OAAOrC,OACzB0B,EAAWU,EAAMC,OAAOrC,QAiCVM,UAAWA,EACXC,mBA/BW,SAAC6B,GAC1BiB,QAAQC,IAAIlB,EAAMC,OAAOrC,OACzB2B,EAAaS,EAAMC,OAAOrC,UA+BxB,yCACA,6BACGwB,EAAQ5B,QAAO,SAAAN,GAAM,OAAIA,EAAOE,KAAK+D,WAAWC,cAAcC,SAAS7B,IAAkC,KAAjBA,KACxFoB,KAAI,SAAA1D,GAAM,OACX,cAAC,EAAD,CAAqBA,OAAQA,EAAQC,QAAS,SAAC6C,GAAD,OAhC/B,SAACA,EAAOtC,GAC3BsC,EAAME,iBACN,IAAMoB,EAAUlC,EAAQkB,MAAK,SAAApD,GAAM,OAAIA,EAAOQ,KAAOA,KACjD8C,OAAOC,QAAP,iBAAyBa,EAAQlE,KAAjC,OACJwC,EACUlC,GACPc,MAAK,SAAA+C,GACJ,IAAMC,EAAYpC,EAAQ5B,QAAO,SAAAN,GAAM,OAAIA,EAAOQ,KAAOA,KACzDoC,EAAiB,WAAD,OAAYwB,EAAQlE,OACpCiC,EAAWmC,MAuB8CC,CAAazB,EAAO9C,EAAOQ,MAAvER,Y,MCrHrBwE,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.116cec81.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, removal }) => {\r\n  return (\r\n    <li>{person.name} {person.number}\r\n    <button onClick={removal}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ({ filter, change }) => {\r\n    return (\r\n        <div>\r\n            filter shown with:\r\n            <input id={filter}\r\n                   type=\"text\"\r\n                   value={filter}\r\n                   onChange={change}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n      <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.type}>\r\n        {message.message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState()\n  const [showFiltered, setShowFiltered] = useState('')\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n      personService\n        .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n      })\n  }, [])\n\n  const notificationType = (message, type='successful') => {\n    setMessage({message, type})\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }  \n\n  const addPerson = (event) => {\n    event.preventDefault()\n  \n  const personObject = {\n    name: newName,\n    id: persons.length +1,\n    number: newNumber\n  }\n\n  const personExists = persons.find(person => person.name === personObject.name)\n  if(personExists !== undefined){\n    const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n    if(confirmed) {\n      const updatedPerson = {...personExists, number: personObject.number}\n      personService\n        .update(personExists.id, updatedPerson)\n        .then (updated => {\n          notificationType(`Changed the number of ${updatedPerson.name} to a new one`)\n          setPersons(persons.map(person => person.number !== personExists.number ? person : updated))\n          setNewName('')\n          setNewNumber('') \n          return\n        })\n        .catch(error => {\n          notificationType(`${updatedPerson.name} has already been removed from the server`, 'error')\n        })\n        \n        setNewName('')\n        setNewNumber('')\n        return\n    }\n    setNewName('')\n    setNewNumber('')\n    return\n  }\n\n  personService\n    .create(personObject)\n    .then(returnedPersons => {\n      notificationType(`Added ${returnedPersons.name}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n      setPersons(persons.concat(returnedPersons))\n      setNewName('')\n      setNewNumber('')   \n    })\n    \n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleRemove = (event, id) => {\n    event.preventDefault()\n    const removed = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${removed.name}?`))\n    personService\n      .remove(id)\n      .then(joku => {\n        const remainder = persons.filter(person => person.id !== id)\n        notificationType(`Deleted ${removed.name}`)\n        setPersons(remainder)\n      })   \n      return     \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={showFiltered} change={event => setShowFiltered(event.target.value)}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm addPerson={addPerson} \n                  newName={newName} \n                  handleNameChange={handleNameChange}\n                  newNumber={newNumber}\n                  handleNumberChange={handleNumberChange}/>    \n\n      <h2>Numbers</h2>\n      <ul>\n        {persons.filter(person => person.name.toString().toLowerCase().includes(showFiltered) || showFiltered === '')\n        .map(person =>\n        <Person key={person} person={person} removal={(event) => handleRemove(event, person.id)}/>)}       \n      </ul>\n    </div>\n  )\n}\n\nexport default App\n\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n)\n"],"sourceRoot":""}